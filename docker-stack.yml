version: '3'
services:
  traefik:
    image: traefik
    ports:
      - 8000:80
      - 444:443
      - 8080:8080
    command: traefik --web -l DEBUG --docker --docker.swarmmode --docker.watch -c /etc/traefik/traefik.toml
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /traefik.toml:/etc/traefik/traefik.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock
  wordpress:
    image: wordpress:php7.1-fpm-alpine
    ports:
      - 8080:80
    networks:
      - common
    depends_on:
      - dbcluster
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      WORDPRESS_DB_HOST: "wpdbcluster"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_USER: "wordpress"
      WORDPRESS_DB_PASSWORD: "ChangeME"
      WORDPRESS_AUTH_KEY: "ChangeME"
      WORDPRESS_LOGGED_IN_KEY: "ChangeME"
      WORDPRESS_AUTH_SALT: "ChangeME"
      WORDPRESS_LOGGED_IN_SALT: "ChangeME"
    depends_on:
      - wpdbcluster
    networks:
      - wordpress-network
  wpdbcluster:
    image: gregnuj/mariadb-galera-swarm
    networks:
      - common
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ChangeME 
      MYSQL_DATABASE: wordpress 
      MYSQL_USER: wordpress 
      MYSQL_PASSWORD: ChangeME 
      CLUSTER_MINIMUM: 3
      CLUSTER_NAME: wpdbcluster
    networks:
      - wordpress-network
  volumes:
      - ./mariadb-init:/docker-entrypoint-initdb.d
      - /srv/db:/var/lib/mysql

  php:
    image: php/7.1.7-fpm-alpine
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
    volumes:
      - /srv/wp:/var/www/html

  nginx:
    image: nginx/1.13.3-alpine
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/
    volumes:
      - /srv/wp:/var/www/html
    depends_on:
      - php
      - wpdbcluster
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.frontend.rule=Host:wp.localhost'

  pma:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mariadb
      PMA_USER: ChangeME
      PMA_PASSWORD: ChangeME
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    depends_on:
      - php
      - wpdbcluster
    labels:
      - 'traefik.backend=pma'
      - 'traefik.frontend.rule=Host:pma.localhost'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.localhost'
      
  varnish:
    image: cloudposse/varnish
    depends_on:
      - nginx
    environment:
      VARNISH_BACKEND_HOST: localhost
      VARNISH_BACKEND_PORT: 80
    labels:
      - 'traefik.backend=varnish'
      - 'traefik.port=6081'
      - 'traefik.frontend.rule=Host:varnish.wp.docker.localhost'

  redis:
    image: redis/4.0.1-alpine

  athenapdf:
    image: arachnysdocker/athenapdf-service
    environment:
      WEAVER_AUTH_KEY: weaver-auth-key
      WEAVER_ATHENA_CMD: "athenapdf -S"
      WEAVER_MAX_WORKERS: 10
      WEAVER_MAX_CONVERSION_QUEUE: 50
      WEAVER_WORKER_TIMEOUT: 90
      WEAVER_CONVERSION_FALLBACK: 'false'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.wp.docker.localhost'

  portainer:
    image: portainer/portainer
    command: --no-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.wp.docker.localhost'
    
